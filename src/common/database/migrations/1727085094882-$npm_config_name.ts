import { MigrationInterface, QueryRunner } from "typeorm";

export class  $npmConfigName1727085094882 implements MigrationInterface {
    name = ' $npmConfigName1727085094882'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "token" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "user_id" character varying NOT NULL, "scope" character varying NOT NULL, "access_token" character varying(1000) NOT NULL, "access_token_expires_at" TIMESTAMP NOT NULL DEFAULT now(), "refresh_token" character varying(1000) NOT NULL, "refresh_token_expires_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_82fae97f905930df5d62a702fc9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_e50ca89d635960fda2ffeb1763" ON "token" ("user_id") `);
        await queryRunner.query(`CREATE TABLE "email_token" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "user_id" character varying NOT NULL, "email" character varying NOT NULL, "token" character varying NOT NULL, "token_expires_at" TIMESTAMP NOT NULL DEFAULT now(), "verified_at" TIMESTAMP, "status" smallint NOT NULL DEFAULT '1', CONSTRAINT "PK_7175dbe70853f76bcbcb1285f92" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "profile" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "user_id" uuid NOT NULL, "phone" character varying, "upi" character varying, "zalo_id" character varying, "zalo_follow_oa_id" character varying, "zalo_follow_at" TIMESTAMP, "full_name" character varying, "avatar" character varying, "code" character varying, CONSTRAINT "PK_d752442f45f258a8bdefeebb2f2" PRIMARY KEY ("user_id"))`);
        await queryRunner.query(`CREATE TABLE "permission" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "name" character varying NOT NULL, "slug" character varying NOT NULL, "module" character varying NOT NULL, "position" integer NOT NULL, CONSTRAINT "UQ_3379e3b123dac5ec10734b8cc86" UNIQUE ("slug"), CONSTRAINT "PK_3b8b97af9d9d8807e41e6f48362" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "permission_role" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "role_id" integer, "permission_id" integer, CONSTRAINT "PK_383892d758d08d346f837d3d8b7" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "role" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "name" character varying NOT NULL, "slug" character varying NOT NULL, "status" smallint NOT NULL DEFAULT '1', CONSTRAINT "UQ_35c9b140caaf6da09cfabb0d675" UNIQUE ("slug"), CONSTRAINT "PK_b36bcfe02fc8de3c57a8b2391c2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user_role" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "user_id" uuid, "role_id" integer, CONSTRAINT "PK_fb2e442d14add3cefbdf33c4561" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "deleted_at" TIMESTAMP, "email" character varying, "username" character varying NOT NULL, "password" character varying NOT NULL, "status" smallint NOT NULL DEFAULT '1', "change_password_at" TIMESTAMP, "login_failed" smallint NOT NULL DEFAULT '0', CONSTRAINT "UQ_78a916df40e02a9deb1c4b75edb" UNIQUE ("username"), CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "zalo_message" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "from_id" character varying, "from_display_name" character varying, "from_avatar" character varying, "to_id" character varying, "to_display_name" character varying, "to_avatar" character varying, "event_name" character varying, "message_id" character varying NOT NULL, "quote_message_id" character varying, "message" character varying(4000), "timestamp" bigint, "attachments" text, "comment" character varying(1000), "observe_by" uuid, CONSTRAINT "PK_9b9374777aa0bf01f5c61e73965" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_252e8a64ad4150e3f9f1145331" ON "zalo_message" ("from_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_73813c7ffe9871ee41df1db32f" ON "zalo_message" ("to_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_801e6d1f2c8bd97436f129eb72" ON "zalo_message" ("message_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_f699b5bec98aadf60563bc3088" ON "zalo_message" ("timestamp") `);
        await queryRunner.query(`CREATE TABLE "reminder" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "reminder_days_before" integer NOT NULL, "reminder_expire_days" integer NOT NULL, "reminder_sent_at" TIMESTAMP NOT NULL, "reminder_expire_at" TIMESTAMP NOT NULL, "event_id" integer NOT NULL, CONSTRAINT "PK_9ec029d17cb8dece186b9221ede" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "reminder_history" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "reply_status" smallint NOT NULL DEFAULT '0', "reminder_id" integer NOT NULL, "content" text NOT NULL, "event_guest_id" integer NOT NULL, CONSTRAINT "PK_591afee8e70c11c1801f303b2d6" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "event_guest" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "event_id" integer NOT NULL, "hcp_id" integer NOT NULL, "qr_code" character varying NOT NULL, "qr_status" smallint NOT NULL DEFAULT '1', "invitation_time_at" TIMESTAMP, "reply_status" smallint NOT NULL DEFAULT '1', "is_eligible" smallint NOT NULL DEFAULT '0', "checked_in_at" TIMESTAMP, "ref_id" integer, CONSTRAINT "UQ_9905ff59a38cb9f385bc195d6cd" UNIQUE ("qr_code"), CONSTRAINT "PK_d9bd3f2289aa4b0f5cba603b3ef" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "submission" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "question_type" smallint NOT NULL, "question_content" character varying, "answer_value" character varying, "answer_text" character varying, "form_question_id" integer NOT NULL, "event_guest_id" integer, CONSTRAINT "PK_7faa571d0e4a7076e85890c9bd0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "submission_answer" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "submission_id" integer NOT NULL, "answer_id" integer NOT NULL, "answer_content" character varying NOT NULL, "answer_text" character varying, CONSTRAINT "PK_f9a6a82bfc007cea093ca63211e" PRIMARY KEY ("submission_id", "answer_id"))`);
        await queryRunner.query(`CREATE TABLE "answer" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "content" character varying(2000) NOT NULL, "require_input" smallint NOT NULL DEFAULT '0', "question_id" integer NOT NULL, CONSTRAINT "PK_9232db17b63fb1e94f97e5c224f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "question" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "content" character varying(2000) NOT NULL, "type" smallint NOT NULL DEFAULT '1', "is_required" smallint NOT NULL DEFAULT '1', CONSTRAINT "PK_21e5786aa0ea704ae185a79b2d5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "form_question" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "order" integer NOT NULL, "form_type" smallint NOT NULL, "form_id" integer NOT NULL, "question_id" integer NOT NULL, CONSTRAINT "PK_5bc5aa86b9da4b82b41726d8126" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "feedback_document" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "url" character varying NOT NULL, "feedback_id" integer NOT NULL, CONSTRAINT "PK_d1590a71843e44eb773b8e8b270" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "feedback" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "name" character varying NOT NULL, "code" character varying NOT NULL, "feedback_days_before" integer, "feedback_expire_days" integer, "feedback_send_at" TIMESTAMP NOT NULL, "feedback_expire_at" TIMESTAMP NOT NULL, "status" smallint NOT NULL DEFAULT '1', "event_id" integer NOT NULL, CONSTRAINT "UQ_1dbb7725a4168496ba999557e25" UNIQUE ("code"), CONSTRAINT "PK_8389f9e087a57689cd5be8b2b13" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "event" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "name" character varying(200) NOT NULL, "code" character varying NOT NULL, "content" text NOT NULL, "image_url" character varying NOT NULL, "location" character varying(2000), "started_at" TIMESTAMP NOT NULL, "ended_at" TIMESTAMP NOT NULL, "invite_days_before" integer, "invite_expire_days" integer, "invite_send_at" TIMESTAMP NOT NULL, "invite_expire_at" TIMESTAMP NOT NULL, "is_public" smallint NOT NULL DEFAULT '1', "publish_at" TIMESTAMP, "status" smallint NOT NULL DEFAULT '1', "event_form_id" integer, CONSTRAINT "UQ_58f788de12432757f10c683bbd6" UNIQUE ("code"), CONSTRAINT "PK_30c2f3bbaf6d34a55f8ae6e4614" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "survey" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "name" character varying NOT NULL, "code" character varying NOT NULL, "status" smallint NOT NULL DEFAULT '0', "event_id" integer NOT NULL, "started_at" TIMESTAMP NOT NULL, "ended_at" TIMESTAMP NOT NULL, CONSTRAINT "PK_f0da32b9181e9c02ecf0be11ed3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "system" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "name" character varying NOT NULL, "key" character varying NOT NULL, "value" text NOT NULL, "unit" smallint NOT NULL DEFAULT '0', "group" character varying NOT NULL, "status" smallint NOT NULL DEFAULT '1', "is_public" smallint NOT NULL DEFAULT '1', CONSTRAINT "PK_6b1e6b6f88da9888fde62379945" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "news" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "title" character varying NOT NULL, "thumbnail" character varying, "code" character varying NOT NULL, "content" text NOT NULL, "status" smallint NOT NULL DEFAULT '0', "published_at" TIMESTAMP, "view" integer NOT NULL DEFAULT '0', CONSTRAINT "PK_39a43dfcb6007180f04aff2357e" PRIMARY KEY ("id")); COMMENT ON COLUMN "news"."published_at" IS 'Thời gian publish tin tức'`);
        await queryRunner.query(`CREATE TABLE "news_view" ("created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "id" SERIAL NOT NULL, "news_id" integer NOT NULL, "user_id" uuid NOT NULL, CONSTRAINT "PK_da93a868b678bcce7b2d7cc1375" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "profile" ADD CONSTRAINT "FK_d752442f45f258a8bdefeebb2f2" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "permission_role" ADD CONSTRAINT "FK_693f65986d1bd7b5bc973e30d76" FOREIGN KEY ("role_id") REFERENCES "role"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "permission_role" ADD CONSTRAINT "FK_ea144050277434b1ec4a3070614" FOREIGN KEY ("permission_id") REFERENCES "permission"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_role" ADD CONSTRAINT "FK_d0e5815877f7395a198a4cb0a46" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_role" ADD CONSTRAINT "FK_32a6fc2fcb019d8e3a8ace0f55f" FOREIGN KEY ("role_id") REFERENCES "role"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "zalo_message" ADD CONSTRAINT "FK_d059d535132db3781a854e53f28" FOREIGN KEY ("observe_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reminder" ADD CONSTRAINT "FK_a69e6af207aded445f07b200ff5" FOREIGN KEY ("event_id") REFERENCES "event"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reminder_history" ADD CONSTRAINT "FK_fdc9294d4d0573a8087904eb928" FOREIGN KEY ("event_guest_id") REFERENCES "event_guest"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reminder_history" ADD CONSTRAINT "FK_641758982cc3a77352c9cfae9c8" FOREIGN KEY ("reminder_id") REFERENCES "reminder"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "event_guest" ADD CONSTRAINT "FK_2a733525396258eeb5dbbfaaeed" FOREIGN KEY ("event_id") REFERENCES "event"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "event_guest" ADD CONSTRAINT "FK_84001529739b60cd6ed906ace9b" FOREIGN KEY ("ref_id") REFERENCES "event_guest"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "submission" ADD CONSTRAINT "FK_9914d0279d6518000c859c0b711" FOREIGN KEY ("form_question_id") REFERENCES "form_question"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "submission" ADD CONSTRAINT "FK_5674b32d810559abf91106398c3" FOREIGN KEY ("event_guest_id") REFERENCES "event_guest"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "submission_answer" ADD CONSTRAINT "FK_9f5ddde0c28241218800828d9d0" FOREIGN KEY ("submission_id") REFERENCES "submission"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "submission_answer" ADD CONSTRAINT "FK_b57cd546bd575b54d5e8c1807f0" FOREIGN KEY ("answer_id") REFERENCES "answer"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "answer" ADD CONSTRAINT "FK_c3d19a89541e4f0813f2fe09194" FOREIGN KEY ("question_id") REFERENCES "question"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "form_question" ADD CONSTRAINT "FK_11df8194286ed46242d7fd86a76" FOREIGN KEY ("question_id") REFERENCES "question"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feedback_document" ADD CONSTRAINT "FK_32ba8dd03712c5fc1fec028d3a6" FOREIGN KEY ("feedback_id") REFERENCES "feedback"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feedback" ADD CONSTRAINT "FK_bd5532b1ca70202fb0cca230716" FOREIGN KEY ("event_id") REFERENCES "event"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "survey" ADD CONSTRAINT "FK_1056f0a63f008007239827107ae" FOREIGN KEY ("event_id") REFERENCES "event"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "news_view" ADD CONSTRAINT "FK_064afa3adf05e992200d5c6c2de" FOREIGN KEY ("news_id") REFERENCES "news"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "news_view" ADD CONSTRAINT "FK_e670faeeefdcb093b83a8a6edb2" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`CREATE VIEW "view_submit_text" AS SELECT "form_question"."order" AS "order", "form_question"."form_type" AS "form_type", "form_question"."form_id" AS "form_id", "question"."id" AS "question_id", "submission"."question_content" AS "question_content", "submission"."answer_text" AS "answer_text", "submission"."event_guest_id" AS "event_guest_id" FROM "form_question" "form_question" LEFT JOIN "question" "question" ON "question"."id" = "form_question"."question_id"  LEFT JOIN "submission" "submission" ON "submission"."form_question_id" = "form_question"."id" WHERE "submission"."question_type" = 4 AND "submission"."id" IS NOT NULL`);
        await queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["public","VIEW","view_submit_text","SELECT \"form_question\".\"order\" AS \"order\", \"form_question\".\"form_type\" AS \"form_type\", \"form_question\".\"form_id\" AS \"form_id\", \"question\".\"id\" AS \"question_id\", \"submission\".\"question_content\" AS \"question_content\", \"submission\".\"answer_text\" AS \"answer_text\", \"submission\".\"event_guest_id\" AS \"event_guest_id\" FROM \"form_question\" \"form_question\" LEFT JOIN \"question\" \"question\" ON \"question\".\"id\" = \"form_question\".\"question_id\"  LEFT JOIN \"submission\" \"submission\" ON \"submission\".\"form_question_id\" = \"form_question\".\"id\" WHERE \"submission\".\"question_type\" = 4 AND \"submission\".\"id\" IS NOT NULL"]);
        await queryRunner.query(`CREATE VIEW "view_submit_rating" AS SELECT "form_question"."order" AS "order", "form_question"."form_type" AS "form_type", "form_question"."form_id" AS "form_id", "question"."id" AS "question_id", "submission"."question_content" AS "question_content", "submission"."answer_value" AS "answer_value", "submission"."event_guest_id" AS "event_guest_id" FROM "form_question" "form_question" LEFT JOIN "question" "question" ON "question"."id" = "form_question"."question_id"  LEFT JOIN "submission" "submission" ON "submission"."form_question_id" = "form_question"."id" WHERE "submission"."question_type" = 3 AND "submission"."id" IS NOT NULL`);
        await queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["public","VIEW","view_submit_rating","SELECT \"form_question\".\"order\" AS \"order\", \"form_question\".\"form_type\" AS \"form_type\", \"form_question\".\"form_id\" AS \"form_id\", \"question\".\"id\" AS \"question_id\", \"submission\".\"question_content\" AS \"question_content\", \"submission\".\"answer_value\" AS \"answer_value\", \"submission\".\"event_guest_id\" AS \"event_guest_id\" FROM \"form_question\" \"form_question\" LEFT JOIN \"question\" \"question\" ON \"question\".\"id\" = \"form_question\".\"question_id\"  LEFT JOIN \"submission\" \"submission\" ON \"submission\".\"form_question_id\" = \"form_question\".\"id\" WHERE \"submission\".\"question_type\" = 3 AND \"submission\".\"id\" IS NOT NULL"]);
        await queryRunner.query(`CREATE VIEW "view_submit_single_choice" AS SELECT "form_question"."order" AS "order", "form_question"."form_type" AS "form_type", "form_question"."form_id" AS "form_id", "question"."id" AS "question_id", "submission"."question_content" AS "question_content", "submission"."event_guest_id" AS "event_guest_id", "submission_answer"."answer_id" AS "answer_id", "submission_answer"."answer_content" AS "answer_content", "submission_answer"."answer_text" AS "answer_text" FROM "form_question" "form_question" LEFT JOIN "question" "question" ON "question"."id" = "form_question"."question_id"  LEFT JOIN "submission" "submission" ON "submission"."form_question_id" = "form_question"."id"  LEFT JOIN "submission_answer" "submission_answer" ON "submission"."id" = "submission_answer"."submission_id" WHERE "submission"."question_type" = 1 AND "submission"."id" IS NOT NULL`);
        await queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["public","VIEW","view_submit_single_choice","SELECT \"form_question\".\"order\" AS \"order\", \"form_question\".\"form_type\" AS \"form_type\", \"form_question\".\"form_id\" AS \"form_id\", \"question\".\"id\" AS \"question_id\", \"submission\".\"question_content\" AS \"question_content\", \"submission\".\"event_guest_id\" AS \"event_guest_id\", \"submission_answer\".\"answer_id\" AS \"answer_id\", \"submission_answer\".\"answer_content\" AS \"answer_content\", \"submission_answer\".\"answer_text\" AS \"answer_text\" FROM \"form_question\" \"form_question\" LEFT JOIN \"question\" \"question\" ON \"question\".\"id\" = \"form_question\".\"question_id\"  LEFT JOIN \"submission\" \"submission\" ON \"submission\".\"form_question_id\" = \"form_question\".\"id\"  LEFT JOIN \"submission_answer\" \"submission_answer\" ON \"submission\".\"id\" = \"submission_answer\".\"submission_id\" WHERE \"submission\".\"question_type\" = 1 AND \"submission\".\"id\" IS NOT NULL"]);
        await queryRunner.query(`CREATE VIEW "view_submit_multi_choice" AS SELECT "form_question"."order" AS "order", "form_question"."form_type" AS "form_type", "form_question"."form_id" AS "form_id", "question"."id" AS "question_id", "submission"."question_content" AS "question_content", "submission"."event_guest_id" AS "event_guest_id", "submission_answer"."answer_id" AS "answer_id", "submission_answer"."answer_content" AS "answer_content", "submission_answer"."answer_text" AS "answer_text" FROM "form_question" "form_question" LEFT JOIN "question" "question" ON "question"."id" = "form_question"."question_id"  LEFT JOIN "submission" "submission" ON "submission"."form_question_id" = "form_question"."id"  LEFT JOIN "submission_answer" "submission_answer" ON "submission"."id" = "submission_answer"."submission_id" WHERE "submission"."question_type" = 2 AND "submission"."id" IS NOT NULL`);
        await queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["public","VIEW","view_submit_multi_choice","SELECT \"form_question\".\"order\" AS \"order\", \"form_question\".\"form_type\" AS \"form_type\", \"form_question\".\"form_id\" AS \"form_id\", \"question\".\"id\" AS \"question_id\", \"submission\".\"question_content\" AS \"question_content\", \"submission\".\"event_guest_id\" AS \"event_guest_id\", \"submission_answer\".\"answer_id\" AS \"answer_id\", \"submission_answer\".\"answer_content\" AS \"answer_content\", \"submission_answer\".\"answer_text\" AS \"answer_text\" FROM \"form_question\" \"form_question\" LEFT JOIN \"question\" \"question\" ON \"question\".\"id\" = \"form_question\".\"question_id\"  LEFT JOIN \"submission\" \"submission\" ON \"submission\".\"form_question_id\" = \"form_question\".\"id\"  LEFT JOIN \"submission_answer\" \"submission_answer\" ON \"submission\".\"id\" = \"submission_answer\".\"submission_id\" WHERE \"submission\".\"question_type\" = 2 AND \"submission\".\"id\" IS NOT NULL"]);
        await queryRunner.query(`CREATE VIEW "view_submit_percentage" AS SELECT "form_question"."order" AS "order", "form_question"."form_type" AS "form_type", "form_question"."form_id" AS "form_id", "question"."id" AS "question_id", "submission"."question_content" AS "question_content", "submission"."answer_value" AS "answer_value", "submission"."event_guest_id" AS "event_guest_id" FROM "form_question" "form_question" LEFT JOIN "question" "question" ON "question"."id" = "form_question"."question_id"  LEFT JOIN "submission" "submission" ON "submission"."form_question_id" = "form_question"."id" WHERE "submission"."question_type" = 5 AND "submission"."id" IS NOT NULL`);
        await queryRunner.query(`INSERT INTO "typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["public","VIEW","view_submit_percentage","SELECT \"form_question\".\"order\" AS \"order\", \"form_question\".\"form_type\" AS \"form_type\", \"form_question\".\"form_id\" AS \"form_id\", \"question\".\"id\" AS \"question_id\", \"submission\".\"question_content\" AS \"question_content\", \"submission\".\"answer_value\" AS \"answer_value\", \"submission\".\"event_guest_id\" AS \"event_guest_id\" FROM \"form_question\" \"form_question\" LEFT JOIN \"question\" \"question\" ON \"question\".\"id\" = \"form_question\".\"question_id\"  LEFT JOIN \"submission\" \"submission\" ON \"submission\".\"form_question_id\" = \"form_question\".\"id\" WHERE \"submission\".\"question_type\" = 5 AND \"submission\".\"id\" IS NOT NULL"]);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","view_submit_percentage","public"]);
        await queryRunner.query(`DROP VIEW "view_submit_percentage"`);
        await queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","view_submit_multi_choice","public"]);
        await queryRunner.query(`DROP VIEW "view_submit_multi_choice"`);
        await queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","view_submit_single_choice","public"]);
        await queryRunner.query(`DROP VIEW "view_submit_single_choice"`);
        await queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","view_submit_rating","public"]);
        await queryRunner.query(`DROP VIEW "view_submit_rating"`);
        await queryRunner.query(`DELETE FROM "typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","view_submit_text","public"]);
        await queryRunner.query(`DROP VIEW "view_submit_text"`);
        await queryRunner.query(`ALTER TABLE "news_view" DROP CONSTRAINT "FK_e670faeeefdcb093b83a8a6edb2"`);
        await queryRunner.query(`ALTER TABLE "news_view" DROP CONSTRAINT "FK_064afa3adf05e992200d5c6c2de"`);
        await queryRunner.query(`ALTER TABLE "survey" DROP CONSTRAINT "FK_1056f0a63f008007239827107ae"`);
        await queryRunner.query(`ALTER TABLE "feedback" DROP CONSTRAINT "FK_bd5532b1ca70202fb0cca230716"`);
        await queryRunner.query(`ALTER TABLE "feedback_document" DROP CONSTRAINT "FK_32ba8dd03712c5fc1fec028d3a6"`);
        await queryRunner.query(`ALTER TABLE "form_question" DROP CONSTRAINT "FK_11df8194286ed46242d7fd86a76"`);
        await queryRunner.query(`ALTER TABLE "answer" DROP CONSTRAINT "FK_c3d19a89541e4f0813f2fe09194"`);
        await queryRunner.query(`ALTER TABLE "submission_answer" DROP CONSTRAINT "FK_b57cd546bd575b54d5e8c1807f0"`);
        await queryRunner.query(`ALTER TABLE "submission_answer" DROP CONSTRAINT "FK_9f5ddde0c28241218800828d9d0"`);
        await queryRunner.query(`ALTER TABLE "submission" DROP CONSTRAINT "FK_5674b32d810559abf91106398c3"`);
        await queryRunner.query(`ALTER TABLE "submission" DROP CONSTRAINT "FK_9914d0279d6518000c859c0b711"`);
        await queryRunner.query(`ALTER TABLE "event_guest" DROP CONSTRAINT "FK_84001529739b60cd6ed906ace9b"`);
        await queryRunner.query(`ALTER TABLE "event_guest" DROP CONSTRAINT "FK_2a733525396258eeb5dbbfaaeed"`);
        await queryRunner.query(`ALTER TABLE "reminder_history" DROP CONSTRAINT "FK_641758982cc3a77352c9cfae9c8"`);
        await queryRunner.query(`ALTER TABLE "reminder_history" DROP CONSTRAINT "FK_fdc9294d4d0573a8087904eb928"`);
        await queryRunner.query(`ALTER TABLE "reminder" DROP CONSTRAINT "FK_a69e6af207aded445f07b200ff5"`);
        await queryRunner.query(`ALTER TABLE "zalo_message" DROP CONSTRAINT "FK_d059d535132db3781a854e53f28"`);
        await queryRunner.query(`ALTER TABLE "user_role" DROP CONSTRAINT "FK_32a6fc2fcb019d8e3a8ace0f55f"`);
        await queryRunner.query(`ALTER TABLE "user_role" DROP CONSTRAINT "FK_d0e5815877f7395a198a4cb0a46"`);
        await queryRunner.query(`ALTER TABLE "permission_role" DROP CONSTRAINT "FK_ea144050277434b1ec4a3070614"`);
        await queryRunner.query(`ALTER TABLE "permission_role" DROP CONSTRAINT "FK_693f65986d1bd7b5bc973e30d76"`);
        await queryRunner.query(`ALTER TABLE "profile" DROP CONSTRAINT "FK_d752442f45f258a8bdefeebb2f2"`);
        await queryRunner.query(`DROP TABLE "news_view"`);
        await queryRunner.query(`DROP TABLE "news"`);
        await queryRunner.query(`DROP TABLE "system"`);
        await queryRunner.query(`DROP TABLE "survey"`);
        await queryRunner.query(`DROP TABLE "event"`);
        await queryRunner.query(`DROP TABLE "feedback"`);
        await queryRunner.query(`DROP TABLE "feedback_document"`);
        await queryRunner.query(`DROP TABLE "form_question"`);
        await queryRunner.query(`DROP TABLE "question"`);
        await queryRunner.query(`DROP TABLE "answer"`);
        await queryRunner.query(`DROP TABLE "submission_answer"`);
        await queryRunner.query(`DROP TABLE "submission"`);
        await queryRunner.query(`DROP TABLE "event_guest"`);
        await queryRunner.query(`DROP TABLE "reminder_history"`);
        await queryRunner.query(`DROP TABLE "reminder"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f699b5bec98aadf60563bc3088"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_801e6d1f2c8bd97436f129eb72"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_73813c7ffe9871ee41df1db32f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_252e8a64ad4150e3f9f1145331"`);
        await queryRunner.query(`DROP TABLE "zalo_message"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TABLE "user_role"`);
        await queryRunner.query(`DROP TABLE "role"`);
        await queryRunner.query(`DROP TABLE "permission_role"`);
        await queryRunner.query(`DROP TABLE "permission"`);
        await queryRunner.query(`DROP TABLE "profile"`);
        await queryRunner.query(`DROP TABLE "email_token"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e50ca89d635960fda2ffeb1763"`);
        await queryRunner.query(`DROP TABLE "token"`);
    }

}
